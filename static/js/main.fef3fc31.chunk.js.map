{"version":3,"sources":["reducers/websocket.js","reducers/pop-up.js","reducers/loader.js","utils.js","reducers/qm/team.js","reducers/qm/room.js","reducers/team-app.js","reducers/scoreboard.js","middleware/socketMiddleware.js","reducers/qm/category.js","reducers/qm/question.js","reducers/qm/guess.js","reducers/qm/index.js","reducers/index.js","component/Button.js","component/PopUp.js","component/components/Score.js","component/components/quiz.jsx","component/components/start.js","component/Logo.js","component/nav.js","component/PredefQues.js","component/Home.js","component/HostEnd.js","component/QuesInput.js","component/CreateCustom.js","component/CustomQuiz/Score.js","component/CustomQuiz/CustomQuiz.js","component/TimerAttend/Score.js","component/TimerAttend/QuizAttend.js","component/LevelQuiz/Score.js","component/LevelQuiz/LevelQuiz.js","component/RoomHome.js","components/questions_data/data.js","components/core/Answers.jsx","components/core/Main.jsx","component/RecoverButton.js","component/Loader.js","component/Login/Login.js","component/Signup/Signup.js","component/LevelInput.js","component/LevelHome.js","component/TimerQuiz.js","component/AppRoute.js","App.js","serviceWorker.js","index.js"],"names":["wsConnect","ping","type","websocketReducer","produce","draft","action","connected","connecting","crashed","showPopUpAction","title","message","button","popUpReducer","active","setLoaderAction","text","loaderReducer","checkFetchError","response","a","json","ok","Promise","reject","Error","fetchApi","path","method","opts","fetch","process","REACT_APP_API_URL","credentials","mode","cache","selectedTeamApplication","value","teamApplications","applications","filter","team","id","approvedTeamApplications","push","roomClosed","roomCode","language","round","room","currentQuestion","questionClosed","teams","roundStarted","question","questionNo","categories","selectedCategories","selectedCategory","questions","questionsAsked","selectedQuestion","approvingATeamGuess","clearTeamRoom","teamAppReducer","length","minLength","maxLength","name","valid","uppercase","toUpperCase","open","roundNo","number","category","guess","teamID","data","questionCompleted","connectedToRoom","triedConnectingToRoom","connectingToRoom","ended","socketMiddleware","socket","onMessage","store","state","getState","dispatch","quizzMasterApp","JSON","parse","console","error","close","fetchRoom","teamApp","fetchRoomState","closeQuestion","fetchGameState","scoreboard","warn","next","WebSocket","REACT_APP_WS_URL","onmessage","onclose","code","onClose","onopen","command","onOpen","log","send","stringify","map","array","i","rand","Math","floor","random","shuffle","_id","reduceReducers","combineReducers","websocket","popUp","loader","Button","disabled","children","rest","useSelector","className","PopUp","useDispatch","onClick","Score","props","Title","Body","this","score","Component","quiz","isComplete","incorrect","index","nextQuestion","bind","selected","correct","setState","he","decode","options","incorrect_answers","correctAnswer","correct_answer","sort","style","alignContent","marginTop","marginLeft","width","marginRight","height","Subtitle","marginBottom","Start","difficulties","types","difficulty","handleChange","event","target","vals","alignItems","textAlign","onChange","item","toLowerCase","startQuiz","Logo","fontSize","center","Nav","show","loggedin","localStorage","getItem","handleLogout","clear","setItem","window","location","reload","CheckLogin","href","paddingRight","textTransform","React","PredefQues","isRunning","isLoading","handleRestart","then","trivia_categories","catch","values","response_code","results","restartQuiz","Card","subtitle","link","to","Home","xs","lg","HostEnd","alignSelf","roomcode","QuesInput","isCompleted","option1","option2","option3","option4","questionArray","optionsArray","correctAnswers","clearInputs","nextQues","finished","correctoption","host","timer","timersec","headers","body","roomname","quizname","correctanswers","cutoff","totallevel","level","res","alert","variant","Container","align","resize","placeholder","fontWeight","CreateCustom","numberQuestion","Quizname","start","CreateQues","step","min","CustomQuiz","TimerAttend","nextQuestionTigger","renderTime","remainingTime","Height","isPlaying","duration","strokeWidth","size","colors","onComplete","LevelQuiz","fetchnext","percent","success","RoomHome","Running","onSubmit","border","margin","answers","Answers","isAnswered","classNames","checkAnswer","clearClasses","e","elem","currentTarget","increaseScore","answer","Number","dataset","updatedClassNames","showButton","setTimeout","data-id","Main","count","total","questionAnswered","displayPopup","handleShowButton","handleStartQuiz","handleIncreaseScore","insertData","RecoverButton","class","viewBox","preserveAspectRatio","transform","attributeName","keyTimes","dur","begin","repeatCount","d","fill","role","aria-label","Loader","Login","email","password","handleSubmit","Load","preventDefault","cookies","Cookies","set","get","token","emailnotfound","passwordincorrect","FormHeader","Signup","required","LevelInput","LevelHome","timerSec","TimerQuiz","AppRoute","popUpActive","exact","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fef3fc31.chunk.js","sourcesContent":["import produce from 'immer';\n\n// actions are handled by socketMiddleware\nexport const wsConnect = (ping = false) => ({ type: 'WS_CONNECT', ping });\nexport const wsDisconnect = () => ({ type: 'WS_DISCONNECT' });\nexport const wsPing = command => ({ type: 'WS_PING', command });\n// end of socketMiddleware actions\n\nexport const wsConnected = () => ({ type: 'WS_CONNECTED' });\nexport const wsDisconnected = () => ({ type: 'WS_DISCONNECTED' });\nexport const wsConnecting = () => ({ type: 'WS_CONNECTING' });\nexport const wsCrash = () => ({ type: 'WS_CRASH' });\n\nconst websocketReducer = produce(\n  (draft, action) => {\n    switch (action.type) {\n      case 'WS_CONNECTED':\n        draft.connected = true;\n        draft.connecting = false;\n        draft.crashed = false;\n        return;\n      case 'WS_DISCONNECTED':\n        draft.connected = false;\n        draft.connecting = false;\n        return;\n      case 'WS_CONNECTING':\n        draft.connecting = true;\n        return;\n      case 'WS_CRASH':\n        draft.crashed = true;\n        draft.connecting = false;\n        return;\n      default:\n        return;\n    }\n  },\n  {\n    connected: false,\n    connecting: false,\n    crashed: false,\n  }\n);\n\nexport default websocketReducer;\n","import produce from 'immer';\n\nexport const showPopUpAction = (title, message, button = 'OK') => {\n  return {\n    type: 'SHOW_POP_UP',\n    title,\n    message,\n    button,\n  };\n};\n\nexport const hidePopUpAction = () => {\n  return {\n    type: 'HIDE_POP_UP',\n  };\n};\n\nconst popUpReducer = produce(\n  (draft, action) => {\n    switch (action.type) {\n      case 'SHOW_POP_UP':\n        draft.title = action.title;\n        draft.message = action.message;\n        draft.button = action.button;\n        draft.active = true;\n        return;\n      case 'HIDE_POP_UP':\n        draft.active = false;\n        return;\n      default:\n        return;\n    }\n  },\n  {\n    title: '',\n    message: '',\n    button: '',\n    active: false,\n  }\n);\n\nexport default popUpReducer;\n","import produce from 'immer';\n\nexport const setLoaderAction = text => {\n  return {\n    type: 'SET_LOADER',\n    text,\n  };\n};\n\nexport const stopLoaderAction = () => {\n  return {\n    type: 'STOP_LOADER',\n  };\n};\n\nconst loaderReducer = produce(\n  (draft, action) => {\n    switch (action.type) {\n      case 'SET_LOADER':\n        draft.active = true;\n        draft.text = action.text;\n        return;\n      case 'STOP_LOADER':\n        draft.active = false;\n        draft.text = '';\n        return;\n      default:\n        return;\n    }\n  },\n  {\n    active: false,\n    text: '',\n  }\n);\n\nexport default loaderReducer;\n","export const checkFetchError = async response => {\n  const json = await response.json();\n  if (response.ok) {\n    return json;\n  }\n  return Promise.reject(new Error(json.message));\n};\n\nexport const fetchApi = (path, method = 'GET', opts = {}) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/${path}`, {\n    method: method,\n    credentials: 'include',\n    mode: 'cors',\n    cache: method === 'GET' ? 'default' : 'no-cache',\n    ...opts,\n  });\n};\n\nexport const fetchApiSendJson = (path, method, data) => {\n  return fetchApi(path, method, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n};\n\nexport const shuffle = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const rand = Math.floor(Math.random() * (i + 1));\n    [array[i], array[rand]] = [array[rand], array[i]];\n  }\n};\n","import produce from 'immer';\n\nimport { checkFetchError, fetchApi, fetchApiSendJson } from '../../utils';\nimport { setLoaderAction, stopLoaderAction } from '../loader';\nimport { showPopUpAction } from '../pop-up';\n\nexport const addTeamApplications = applications => ({\n  type: 'ADD_TEAM_APPLICATIONS',\n  applications,\n});\n\nexport const fetchTeamApplications = roomCode => async dispatch => {\n  try {\n    const response = await fetchApi(`rooms/${roomCode}/applications`);\n    const data = await checkFetchError(response);\n    dispatch(addTeamApplications(JSON.parse(data)));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst approveTeamApplication = selectedTeamApplication => ({\n  type: `APPROVE_TEAM_APPLICATION`,\n  selectedTeamApplication,\n});\n\nexport const approveSelectedApplication = (selectedTeamApplication, roomCode) => async dispatch => {\n  try {\n    const response = await fetchApiSendJson(`rooms/${roomCode}/teams`, 'POST', {\n      applicationID: selectedTeamApplication.id,\n    });\n    await checkFetchError(response);\n    dispatch(approveTeamApplication(selectedTeamApplication));\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  }\n};\n\nexport const rejectTeamApplication = selectedTeamApplication => ({\n  type: `REJECT_TEAM_APPLICATION`,\n  selectedTeamApplication,\n});\n\nexport const rejectSelectedApplication = (selectedTeamApplication, roomCode) => async dispatch => {\n  try {\n    const response = await fetchApi(\n      `rooms/${roomCode}/applications/${selectedTeamApplication.id}`,\n      'DELETE'\n    );\n    await checkFetchError(response);\n    dispatch(rejectTeamApplication(selectedTeamApplication));\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  }\n};\n\nexport const confirmTeamsAndContinue = roomCode => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Loading...'));\n    const response = await fetchApiSendJson(`rooms/${roomCode}`, 'PATCH', {\n      roomClosed: true,\n      applications: [],\n    });\n    const { roomClosed, applications } = await checkFetchError(response);\n\n    dispatch({ type: 'CONFIRM_TEAMS_APPROVED', roomClosed, applications });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport default produce((draft, action) => {\n  switch (action.type) {\n    case 'ITEM_LIST_CHANGED_APPLIED':\n      draft.selectedTeamApplication = action.value;\n      return;\n    case 'ADD_TEAM_APPLICATIONS':\n      draft.teamApplications = action.applications;\n      return;\n    case 'APPROVE_TEAM_APPLICATION':\n      draft.teamApplications = draft.teamApplications.filter(team => {\n        return team.id !== action.selectedTeamApplication.id;\n      });\n      draft.approvedTeamApplications.push(action.selectedTeamApplication);\n      draft.selectedTeamApplication = null;\n      return;\n    case 'REJECT_TEAM_APPLICATION':\n      draft.teamApplications = draft.teamApplications.filter(team => {\n        return team.id !== action.selectedTeamApplication.id;\n      });\n      draft.selectedTeamApplication = null;\n      return;\n    case 'CONFIRM_TEAMS_APPROVED':\n      draft.roomClosed = action.roomClosed;\n      draft.teamApplications = action.applications;\n      return;\n    default:\n      return;\n  }\n});\n","import produce from 'immer';\n\nimport { wsConnect, wsDisconnect } from '../websocket';\nimport { setLoaderAction, stopLoaderAction } from '../loader';\nimport { showPopUpAction } from '../pop-up';\nimport { checkFetchError, fetchApi, fetchApiSendJson } from '../../utils';\n\nexport const setRoom = (roomCode, language) => ({ type: 'SET_ROOM', roomCode, language });\n\nexport const clearRoomCode = () => ({ type: 'CLEAR_ROOM_CODE' });\n\nexport const createRoom = lang => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Creating a room...'));\n    dispatch(clearQuizzMaster());\n\n    const response = await fetchApiSendJson(`rooms`, 'POST', { language: lang });\n    const { roomCode, language } = await checkFetchError(response);\n\n    dispatch(wsConnect());\n    dispatch(setRoom(roomCode, language));\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport const fetchRoomState = roomCode => async dispatch => {\n  try {\n    const response = await fetchApi(`rooms/${roomCode}`);\n    const room = await checkFetchError(response);\n\n    dispatch({ type: 'FETCHED_ROOM_INFO', room });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  }\n};\n\nexport const closeRoomQuestion = roomCode => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Closing room question...'));\n\n    const response = await fetchApiSendJson(`rooms/${roomCode}`, 'PATCH', {\n      questionClosed: true,\n    });\n    const { questionClosed } = await checkFetchError(response);\n\n    dispatch({ type: 'ROOM_QUESTION_CLOSE', questionClosed });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport const questionCompleted = roomCode => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Loading...'));\n    const response = await fetchApiSendJson(`rooms/${roomCode}`, 'PATCH', {\n      questionCompleted: true,\n    });\n    const { roundStarted, questionNo, currentQuestion, questionClosed } = await checkFetchError(\n      response\n    );\n\n    dispatch({\n      type: 'QUESTION_COMPLETED',\n      roundStarted,\n      questionNo,\n      currentQuestion,\n      questionClosed,\n    });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport const clearQuizzMaster = () => ({ type: 'CLEAR_QUIZZ_MASTER' });\n\nexport const endQuizz = roomCode => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Loading...'));\n    const response = await fetchApi(`rooms/${roomCode}`, 'DELETE');\n    await checkFetchError(response);\n\n    dispatch(clearQuizzMaster());\n    dispatch(wsDisconnect());\n    dispatch(showPopUpAction('🏁', 'Quizz Ended.'));\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport default produce((draft, action) => {\n  switch (action.type) {\n    case 'SET_ROOM':\n      draft.roomCode = action.roomCode;\n      draft.language = action.language;\n      return;\n    case 'CLEAR_ROOM_CODE':\n      draft.roomCode = null;\n      return;\n    case 'FETCHED_ROOM_INFO':\n      draft.round = action.room.round;\n      draft.currentQuestion = action.room.currentQuestion;\n      draft.round = action.room.round;\n      draft.questionClosed = action.room.questionClosed;\n      draft.approvedTeamApplications = action.room.teams;\n      return;\n    case 'ROOM_QUESTION_CLOSE':\n      draft.questionClosed = action.questionClosed;\n      return;\n    case 'QUESTION_COMPLETED':\n      draft.currentQuestion = action.currentQuestion;\n      draft.questionClosed = action.questionClosed;\n      if (!action.roundStarted) {\n        draft.roundStarted = action.roundStarted;\n        draft.question = action.questionNo;\n        draft.categories = [];\n        draft.selectedCategories = [];\n        draft.selectedCategory = null;\n      }\n      return;\n    case 'CLEAR_QUIZZ_MASTER':\n      draft.roomCode = null;\n      draft.language = null;\n      draft.selectedTeamApplication = null;\n      draft.teamApplications = [];\n      draft.approvedTeamApplications = [];\n      draft.roomClosed = false;\n      draft.round = 0;\n      draft.roundStarted = false;\n      draft.selectedCategory = null;\n      draft.categories = [];\n      draft.selectedCategories = [];\n      draft.question = 0;\n      draft.questions = [];\n      draft.questionsAsked = [];\n      draft.currentQuestion = null;\n      draft.questionClosed = true;\n      draft.selectedQuestion = null;\n      draft.approvingATeamGuess = false;\n      return;\n    default:\n      return;\n  }\n});\n","import produce from 'immer';\n\nimport { setLoaderAction, stopLoaderAction } from './loader';\nimport { showPopUpAction } from './pop-up';\nimport { wsConnect } from './websocket';\nimport { checkFetchError, fetchApiSendJson, fetchApi } from '../utils';\n\nexport const textInputHandlerAction = (name, value, minLength, maxLength, uppercase) => {\n  return {\n    type: 'TEXT_INPUT_HANDLER',\n    name,\n    value,\n    minLength,\n    maxLength,\n    uppercase,\n  };\n};\n\nexport const applyTeam = (roomCode, name) => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Applying team'));\n    dispatch(clearTeamRoom());\n\n    const response = await fetchApiSendJson(`rooms/${roomCode}/applications`, 'POST', { name });\n    await checkFetchError(response);\n\n    dispatch(wsConnect('TEAM_APPLIED'));\n    dispatch(setLoaderAction('Waiting for the Quizz Master to review your application...'));\n  } catch (error) {\n    dispatch(stopLoaderAction());\n    dispatch(showPopUpAction('ERROR', error.message));\n  }\n};\n\nexport const clearTeamHome = () => ({ type: 'CLEAR_TEAM_HOME' });\n\nexport const clearTeamRoom = () => ({ type: 'CLEAR_TEAM_ROOM' });\n\nexport const fetchRoom = roomCode => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Loading question...'));\n    const response = await fetchApi(`rooms/${roomCode}`, 'GET');\n    const { round, questionNo, questionClosed, category, question, teamID } = await checkFetchError(\n      response\n    );\n    dispatch({ type: 'SET_ROOM', round, questionNo, questionClosed, category, question, teamID });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport const closeQuestion = roomCode => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Loading room...'));\n\n    const response = await fetchApi(`rooms/${roomCode}`, 'GET');\n    const { questionClosed } = await checkFetchError(response);\n\n    dispatch({ type: 'CLOSE_QUESTION', questionClosed });\n    dispatch(setLoaderAction('Question closed. The Quizz Master is reviewing your guess.'));\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  }\n};\n\nexport const submitGuess = (roomCode, teamID, guess) => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Submitting answer...'));\n\n    const response = await fetchApiSendJson(`rooms/${roomCode}/teams/${teamID}`, 'PATCH', {\n      guess,\n    });\n    await checkFetchError(response);\n\n    dispatch(setLoaderAction('Waiting for the Quizz Master to close the question...'));\n  } catch (error) {\n    dispatch(stopLoaderAction());\n    dispatch(showPopUpAction('ERROR', error.message));\n  }\n};\n\nconst teamAppReducer = produce(\n  (draft, action) => {\n    switch (action.type) {\n      case 'TEXT_INPUT_HANDLER':\n        if (action.value.length < action.minLength || action.value.length > action.maxLength) {\n          draft[action.name].valid = false;\n        } else {\n          draft[action.name].valid = true;\n        }\n\n        if (action.uppercase) {\n          draft[action.name].value = action.value.toUpperCase();\n          return;\n        }\n        draft[action.name].value = action.value;\n        return;\n      case 'CLOSE_QUESTION':\n        draft.question.open = !action.questionClosed;\n        return;\n      case 'SET_ROOM':\n        draft.roundNo = action.round;\n        draft.question.number = action.questionNo;\n        draft.question.open = !action.questionClosed;\n        draft.question.category = action.category;\n        draft.question.question = action.question;\n        draft.guess.value = '';\n        draft.guess.valid = false;\n        draft.teamID = action.teamID;\n        return;\n      case 'CLEAR_TEAM_HOME':\n        draft.roomCode.value = '';\n        draft.roomCode.valid = false;\n        draft.team.value = '';\n        draft.team.valid = false;\n        return;\n      case 'CLEAR_TEAM_ROOM':\n        draft.teamID = null;\n        draft.roundNo = 0;\n        draft.question.open = false;\n        draft.question.number = 0;\n        draft.question.question = '';\n        draft.question.category = '';\n        draft.guess.value = '';\n        draft.guess.valid = false;\n        return;\n      default:\n        return;\n    }\n  },\n  {\n    teamID: null,\n    roomCode: {\n      value: '',\n      valid: false,\n    },\n    team: {\n      value: '',\n      valid: false,\n    },\n    roundNo: 0,\n    question: {\n      open: false,\n      number: 0,\n      question: '',\n      category: '',\n    },\n    guess: {\n      value: '',\n      valid: false,\n    },\n  }\n);\n\nexport default teamAppReducer;\n","import produce from 'immer';\n\nimport { fetchApi, checkFetchError } from '../utils';\nimport { showPopUpAction } from './pop-up';\nimport { setLoaderAction, stopLoaderAction } from './loader';\nimport { wsConnect } from './websocket';\n\nexport const loginAsScoreboardViewer = roomCode => async dispatch => {\n  try {\n    dispatch({ type: 'STARTED_CONNECTING_TO_ROOM' });\n    dispatch(setLoaderAction('Connecting to room...'));\n\n    const response = await fetchApi(`rooms/${roomCode}/scoreboards`, 'POST');\n    const { message } = await checkFetchError(response);\n\n    dispatch(wsConnect());\n    dispatch(setLoaderAction(message));\n\n    dispatch({ type: 'ACCESS_CONFIRMED', roomCode });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch({ type: 'TRIED_CONNECTING_TO_ROOM' });\n    dispatch({ type: 'STOPPED_CONNECTING_TO_ROOM' });\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport const fetchGameState = roomCode => async dispatch => {\n  try {\n    const response = await fetchApi(`rooms/${roomCode}`);\n    const data = await checkFetchError(response);\n    dispatch({ type: 'FETCHED_SCOREBOARD_ROOM_STATE', data });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  }\n};\n\nexport const quizzEnded = () => ({ type: 'QUIZZ_ENDED' });\n\nexport default produce(\n  (draft, action) => {\n    switch (action.type) {\n      case 'FETCHED_SCOREBOARD_ROOM_STATE':\n        draft.round = action.data.round;\n        draft.questionNo = action.data.questionNo;\n        draft.questionClosed = action.data.questionClosed;\n        draft.currentQuestion = action.data.currentQuestion || draft.currentQuestion;\n        draft.teams = action.data.teams;\n        draft.questionCompleted = action.data.questionCompleted;\n        return;\n      case 'ACCESS_CONFIRMED':\n        draft.roomCode = action.roomCode;\n        draft.connectedToRoom = true;\n        return;\n      case 'TRIED_CONNECTING_TO_ROOM':\n        draft.triedConnectingToRoom = true;\n        return;\n      case 'STARTED_CONNECTING_TO_ROOM':\n        draft.connectingToRoom = true;\n        return;\n      case 'STOPPED_CONNECTING_TO_ROOM':\n        draft.connectingToRoom = false;\n        return;\n      case 'QUIZZ_ENDED':\n        draft.ended = true;\n        return;\n      default:\n        return;\n    }\n  },\n  {\n    ended: false,\n    roomCode: null,\n    connectedToRoom: false,\n    connectingToRoom: false,\n    triedConnectingToRoom: false,\n\n    round: null,\n    teams: null,\n    currentQuestion: {},\n    questionNo: null,\n    questionClosed: null,\n  }\n);\n","import { wsConnected, wsDisconnected, wsPing, wsCrash, wsConnecting } from '../reducers/websocket';\nimport { showPopUpAction } from '../reducers/pop-up';\nimport { setLoaderAction, stopLoaderAction } from '../reducers/loader';\nimport { fetchTeamApplications } from '../reducers/qm/team';\nimport { fetchRoomState } from '../reducers/qm/room';\nimport { fetchRoom, clearTeamHome, clearTeamRoom, closeQuestion } from '../reducers/team-app';\nimport { fetchGameState, quizzEnded } from '../reducers/scoreboard';\n\nconst socketMiddleware = () => {\n  let socket = null;\n\n  const onOpen = (store, ping) => () => {\n    store.dispatch(wsConnected());\n    if (ping) {\n      store.dispatch(wsPing(ping));\n    }\n  };\n\n  const onClose = store => ({ code }) => {\n    store.dispatch(wsDisconnected());\n    if (code === 1006) {\n      store.dispatch(wsCrash());\n      store.dispatch(showPopUpAction('💥', 'Server offline.'));\n    }\n  };\n\n  const onMessage = store => ({ data }) => {\n    const state = store.getState();\n    switch (data) {\n      case 'TEAM_APPLIED':\n        store.dispatch(fetchTeamApplications(state.quizzMasterApp.roomCode));\n        break;\n      case 'APPLICATION_ACCEPTED':\n        store.dispatch(\n          setLoaderAction(\n            'Your team has been approved. Waiting for the Quizz Master to start the round...'\n          )\n        );\n        break;\n      case 'APPLICATION_REJECTED':\n        store.dispatch(stopLoaderAction());\n        store.dispatch(showPopUpAction('😔', 'Your application has been rejected.'));\n        socket.close();\n        break;\n      case 'CATEGORIES_SELECTED':\n        store.dispatch(\n          setLoaderAction('Round started. Waiting for the Quizz Master to select a question...')\n        );\n        break;\n      case 'QUESTION_SELECTED':\n        store.dispatch(fetchRoom(state.teamApp.roomCode.value));\n        break;\n      case 'GUESS_SUBMITTED':\n        store.dispatch(fetchRoomState(state.quizzMasterApp.roomCode));\n        break;\n      case 'ROOM_CLOSED':\n        store.dispatch(clearTeamHome());\n        store.dispatch(clearTeamRoom());\n        store.dispatch(stopLoaderAction());\n        store.dispatch(showPopUpAction('💔', 'Room has been closed.'));\n        socket.close();\n        break;\n      case 'QUESTION_CLOSED':\n        store.dispatch(closeQuestion(state.teamApp.roomCode.value));\n        break;\n      case 'SCOREBOARD_REFRESH':\n        store.dispatch(fetchGameState(state.scoreboard.roomCode));\n        break;\n      case 'SCOREBOARD_QUIZZ_ENDED':\n        store.dispatch(quizzEnded());\n        break;\n      default:\n        console.warn(`Not implemented: type \"${data}\".`);\n        break;\n    }\n  };\n\n  // the middleware part of this function\n  return store => next => action => {\n    switch (action.type) {\n      case 'WS_CONNECT':\n        store.dispatch(wsConnecting());\n        if (socket !== null) {\n          socket.close();\n        }\n        socket = new WebSocket(process.env.REACT_APP_WS_URL);\n        socket.onmessage = onMessage(store);\n        socket.onclose = onClose(store);\n        socket.onopen = onOpen(store, action.ping);\n        break;\n      case 'WS_DISCONNECT':\n        if (socket !== null) {\n          socket.close();\n        }\n        socket = null;\n        console.log('websocket closed');\n        break;\n      case 'WS_PING':\n        socket.send(JSON.stringify({ command: action.command }));\n        break;\n      default:\n        return next(action);\n    }\n  };\n};\n\nexport default socketMiddleware();\n","import produce from 'immer';\n\nimport { setLoaderAction, stopLoaderAction } from '../loader';\nimport { showPopUpAction } from '../pop-up';\nimport { checkFetchError, fetchApi, fetchApiSendJson } from '../../utils';\n\nexport const fetchCategories = () => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Retrieving categories...'));\n    const response = await fetchApi(`categories`);\n    const categories = await checkFetchError(response);\n    dispatch({ type: 'CATEGORIES_FETCHED', categories });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport const selectCategory = () => ({\n  type: 'APPROVE_SELECTED_CATEGORY',\n});\n\nexport const deselectCategory = () => ({\n  type: 'REMOVE_SELECTED_CATEGORY',\n});\n\nexport const confirmCategoriesAndContinue = (roomCode, selectedCategories) => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Loading...'));\n\n    const response = await fetchApiSendJson(`rooms/${roomCode}/categories`, 'PUT', {\n      categories: selectedCategories.map(({ category }) => category),\n    });\n    const { roundStarted, round, questionNo } = await checkFetchError(response);\n\n    dispatch({ type: 'CONFIRM_CATEGORIES_SELECTED', roundStarted, round, questionNo });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport default produce((draft, action) => {\n  switch (action.type) {\n    case 'CATEGORIES_FETCHED':\n      draft.categories = action.categories.map(category => ({\n        id: category,\n        category,\n      }));\n      return;\n    case 'ITEM_LIST_CHANGED_CATEGORIES':\n      draft.selectedCategory = action.value;\n      return;\n    case 'APPROVE_SELECTED_CATEGORY':\n      if (draft.selectedCategories.length >= 3) {\n        return;\n      }\n      draft.selectedCategories.push(draft.selectedCategory);\n      draft.categories = draft.categories.filter(({ id }) => id !== draft.selectedCategory.id);\n      draft.selectedCategory = null;\n      return;\n    case 'REMOVE_SELECTED_CATEGORY':\n      draft.selectedCategories = draft.selectedCategories.filter(\n        ({ id }) => id !== draft.selectedCategory.id\n      );\n      draft.categories.push(draft.selectedCategory);\n      draft.selectedCategory = null;\n      return;\n    case 'CONFIRM_CATEGORIES_SELECTED':\n      draft.roundStarted = action.roundStarted;\n      draft.round = action.round;\n      draft.question = action.questionNo;\n      return;\n    default:\n      return;\n  }\n});\n","import produce from 'immer';\nimport { setLoaderAction, stopLoaderAction } from '../loader';\nimport { showPopUpAction } from '../pop-up';\nimport { checkFetchError, fetchApi, fetchApiSendJson, shuffle } from '../../utils';\n\nexport const fetchQuestions = selectedCategories => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Retrieving Questions...'));\n    dispatch({ type: 'CLEAR_QUESTIONS' });\n    await Promise.all(\n      selectedCategories.map(async ({ category }) => {\n        const response = await fetchApi(`categories/${category}/questions`);\n        const questions = await checkFetchError(response);\n        dispatch({ type: 'QUESTIONS_FETCHED', questions });\n      })\n    );\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport const confirmQuestionAndContinue = (roomCode, question) => async dispatch => {\n  try {\n    dispatch(setLoaderAction('Loading...'));\n    const response = await fetchApiSendJson(`rooms/${roomCode}/question`, 'PUT', { question });\n    const { questionClosed, questionNo } = await checkFetchError(response);\n\n    dispatch({ type: 'CONFIRM_QUESTION_SELECTED', question, questionClosed, questionNo });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch(stopLoaderAction());\n  }\n};\n\nexport default produce((draft, action) => {\n  switch (action.type) {\n    case 'QUESTIONS_FETCHED':\n      shuffle(action.questions);\n      draft.questions = [...draft.questions, ...action.questions];\n      return;\n    case 'ITEM_LIST_CHANGED_QUESTIONS':\n      draft.selectedQuestion = action.value;\n      return;\n    case 'CLEAR_QUESTIONS':\n      draft.questions = [];\n      return;\n    case 'CONFIRM_QUESTION_SELECTED':\n      draft.currentQuestion = action.question;\n      draft.questionsAsked = [...draft.questionsAsked, action.question._id];\n      draft.questionClosed = action.questionClosed;\n      draft.question = action.questionNo;\n      draft.selectedQuestion = null;\n      return;\n    default:\n      return;\n  }\n});\n","import produce from 'immer';\n\nimport { fetchApiSendJson } from '../../utils';\nimport { checkFetchError } from '../../utils';\nimport { showPopUpAction } from '../pop-up';\n\nexport const toggleGuessCorrect = (roomCode, teamID, correct) => async dispatch => {\n  try {\n    dispatch({ type: 'START_APPROVING_TEAM_GUESS' });\n    const response = await fetchApiSendJson(`rooms/${roomCode}/teams/${teamID}`, 'PATCH', {\n      guessCorrect: correct,\n    });\n    const { teams } = await checkFetchError(response);\n    dispatch({ type: 'TEAM_GUESS_APPROVED', teams });\n  } catch (error) {\n    dispatch(showPopUpAction('ERROR', error.message));\n  } finally {\n    dispatch({ type: 'STOP_APPROVING_TEAM_GUESS' });\n  }\n};\n\nexport default produce((draft, action) => {\n  switch (action.type) {\n    case 'START_APPROVING_TEAM_GUESS':\n      draft.approvingATeamGuess = true;\n      return;\n    case 'STOP_APPROVING_TEAM_GUESS':\n      draft.approvingATeamGuess = false;\n      return;\n    case 'TEAM_GUESS_APPROVED':\n      draft.approvedTeamApplications = action.teams;\n      return;\n    default:\n      return;\n  }\n});\n","import reduceReducers from 'reduce-reducers';\n\nimport room from './room';\nimport team from './team';\nimport category from './category';\nimport question from './question';\nimport guess from './guess';\n\nexport default reduceReducers(\n  {\n    roomCode: null,\n    language: null,\n\n    selectedTeamApplication: null,\n    teamApplications: [],\n    approvedTeamApplications: [],\n    roomClosed: false,\n\n    round: 0,\n    roundStarted: false,\n    selectedCategory: null,\n    categories: [],\n    selectedCategories: [],\n\n    question: 0,\n    questions: [],\n    questionsAsked: [],\n    currentQuestion: null,\n    questionClosed: true,\n    selectedQuestion: null,\n\n    approvingATeamGuess: false,\n  },\n  room,\n  team,\n  category,\n  question,\n  guess\n);\n","import { combineReducers } from 'redux';\nimport websocket from './websocket';\nimport popUp from './pop-up';\nimport loader from './loader';\nimport teamApp from './team-app';\nimport scoreboard from './scoreboard';\nimport quizzMasterApp from './qm';\n\nexport default combineReducers({\n  websocket,\n  popUp,\n  loader,\n  teamApp,\n  scoreboard,\n  quizzMasterApp,\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Button = ({ type, disabled = false, children, ...rest }) => {\n  const connecting = useSelector(state => state.websocket.connecting);\n\n  return (\n    <button  className={type} disabled={disabled || connecting} {...rest}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { hidePopUpAction } from '../reducers/pop-up';\nimport Button from './Button';\n\nconst PopUp = () => {\n  const title = useSelector(state => state.popUp.title);\n  const message = useSelector(state => state.popUp.message);\n  const button = useSelector(state => state.popUp.button);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(hidePopUpAction());\n  };\n\n  return (\n    <div className=\"overlay show\">\n      <div className=\"popup\">\n        <span className=\"title\">{title}</span>\n        <span className=\"message\">{message}</span>\n        <Button type=\"small\" onClick={handleClick}>\n          {button}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default PopUp;\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\n\r\n class Score extends Component {\r\n    constructor(props) {\r\n        super(props);}\r\n        render(){\r\nreturn(\r\n    <div>\r\n        <Card>\r\n       <Card.Title>\r\n          <h2> SCORE</h2>\r\n       </Card.Title>\r\n       <Card.Body>\r\n           <h2>You have answered {this.props.score} correct out of {this.props.number}</h2>\r\n       </Card.Body>\r\n        </Card>\r\n    </div>\r\n);\r\n }}\r\n export default Score;","import React, { Component } from \"react\";\nimport he from \"he\";\nimport {Card} from 'react-bootstrap'\nimport Score from\"./Score\"\n\nclass quiz extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isComplete: false,\n            score: 0,\n            incorrect: 0,\n            index:0,\n        };\n        this.nextQuestion = this.nextQuestion.bind(this);\n         }\n         nextQuestion(selected,correct){\n             if(selected === correct){\n                 this.setState({score : this.state.score+1})\n             }\n             if(this.state.index===9){\n                 console.log(this.state.score)\n                 this.setState({isComplete: true})\n                              }\n             else{\n             this.setState({index:this.state.index+1})\n         }}\nrender(){\n    if(this.state.isComplete === true){\n        return( <Score  score={this.state.score} number={this.state.index+1}/>);\n    }\n    const question=he.decode(this.props.questions[this.state.index].question);\n    const options=this.props.questions[this.state.index].incorrect_answers;\n    const correctAnswer=he.decode(this.props.questions[this.state.index].correct_answer);\n    console.log(correctAnswer)\n    options.push(correctAnswer);\n    options.sort();    \n   return( \n       <div style={{alignContent:\"justify\",marginTop:\"80px\",marginLeft:\"30%\",width:\"40%\",marginRight:\"30%\",height:\"fit-content\"}}>\n           <Card>\n               <Card.Body>\n               <Card.Title>Question No. {this.state.index+1}</Card.Title>\n               <Card.Subtitle>\n                   {question}\n               </Card.Subtitle>\n               <div style={{marginRight:\"20%\",marginLeft:\"20%\",marginBottom:\"20px\",width:\"60%\"}}>\n               <button onClick={()=>this.nextQuestion(options[0],correctAnswer)}>{options[0]}</button>\n               <button onClick={()=>this.nextQuestion(options[1],correctAnswer)}>{options[1]}</button>\n               <button onClick={()=>this.nextQuestion(options[2],correctAnswer)}>{options[2]}</button>\n               <button onClick={()=>this.nextQuestion(options[3],correctAnswer)}>{options[3]}</button>\n               </div>\n               </Card.Body>\n            </Card>\n       </div>       \n   )\n};\n}\nexport default quiz;","import React, { Component } from \"react\";\nimport { SemipolarLoading } from 'react-loadingg';\nimport {Card} from 'react-bootstrap';\n// Start page with selector\nclass Start extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            difficulties: [\"Easy\", \"Medium\", \"Hard\"],\n            types: [\n                { value: \"multiple\", text: \"Multiple Choice\" },\n                { value: \"boolean\", text: \"True/False\" },\n            ],\n            category: \"\",\n            difficulty: \"\",\n            type: \"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // sets state to selection\n    handleChange(event) {\n        const type = event.target.id;\n        const value = event.target.value;\n        // console.log(type, value);\n        this.setState({ [type]: value });\n    }\n\n    render() {\n       \n        const { category, difficulty, type, difficulties, types } = this.state,\n            vals = { category, difficulty, type },\n            { categories } = this.props;\n        return (\n            <div>\n                <Card className=\"start\" style={{alignItems:\"center\",width:\"40%\",marginLeft:\"30%\",marginTop:\"5%\"}}>\n            <Card.Title style={{textAlign:\"center\"}}>< h2>PREDEFINED QUESTIONS</h2></Card.Title>\n                <select\n                    id=\"category\"\n                    className=\"button_start\"\n                    onChange={this.handleChange}>\n                    <option value=\"\" selected>\n                        Any Category\n                    </option>\n            \n                    {categories.map((item) => (\n                        <option value={item.id}>{item.name}</option>\n                    ))}\n                </select>\n\n                <select\n                    id=\"difficulty\"\n                    className=\"button_start\"\n                    onChange={this.handleChange}\n                >\n                    <option value=\"\" selected>\n                        Any Difficulty\n                    </option>\n                    {difficulties.map((item) => (\n                        <option value={item.toLowerCase()}>{item}</option>\n                    ))}\n                </select>\n\n                <select\n                    id=\"type\"\n                    className=\"button_start\"\n                    onChange={this.handleChange}\n                >\n                    <option value=\"\" selected>\n                        Any Type\n                    </option>\n                    {types.map((item) => (\n                        <option value={item.value}>{item.text}</option>\n                    ))}\n                </select>\n\n                <button style={{marginLeft:\"40%\",width:\"20%\",marginRight:\"40%\"}}\n                    onClick={() => this.props.startQuiz(vals)}>\n                    Start\n                </button>\n\n            </Card>\n            </div>\n        );\n    }\n}\n\nexport default Start;\n","import React from 'react';\n\nconst Logo = ({ fontSize = '3.5em', center }) => (\n  <h1 className=\"logo\" style={{  fontSize, textAlign: center ? 'center' : null }}>\n    Quizzard!\n  </h1>\n);\n\nexport default Logo;\n","\r\n\r\nimport React from 'react';\r\nimport Logo from './Logo';\r\nimport \"./nav.css\"\r\n  \r\nclass Nav extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    this.state={    show: false,\r\n        loggedin: localStorage.getItem(\"loggedin\"),\r\n        name: localStorage.getItem(\"name\"),\r\n      }; \r\n     \r\n    }\r\n      \r\n      \r\nrender(){\r\n    console.log(localStorage.getItem(\"name\"))\r\n    if (localStorage.getItem(\"loggedin\") == null) {\r\n        localStorage.setItem(\"loggedin\", false);\r\n      }\r\n  \r\n      if (localStorage.getItem(\"name\") == null) {\r\n        localStorage.setItem(\"name\", \"\");\r\n      }\r\n      function handleLogout(){\r\n        localStorage.clear(\"loggedin\");\r\n        localStorage.setItem(\"loggedin\", false);\r\n        window.location.reload();\r\n    } \r\n  \r\n    function CheckLogin(props) {\r\n    \r\n      const loggedin = props.loggedin;\r\n      const name = props.name;\r\n      return (\r\n        <div>\r\n          {loggedin === \"false\" && \r\n           <nav className=\"navigation\">\r\n           <Logo />\r\n           <div >\r\n        <a className=\"navigation__link\" href=\"/login\">LOGIN</a>\r\n        <a className=\"navigation__link\" href=\"/register\">SIGNUP</a>\r\n        </div>\r\n        </nav>\r\n    }\r\n      \r\n  {loggedin === \"true\" &&\r\n          <nav className=\"navigation\">\r\n          <Logo />\r\n          \r\n          <div >\r\n          <a style={{ paddingRight:\"15px\",textTransform:\"uppercase\",fontSize:\"20px\"}}>{name}</a>\r\n       <button style={{marginTop:\"15px\"}} className=\"button-nav  button-1\" onClick={handleLogout}>LOGOUT</button>\r\n       </div>\r\n       </nav>\r\n        \r\n  \r\n        \r\n  }\r\n        </div>\r\n      );\r\n    }\r\n  \r\n     return(\r\n     \r\n        <div>\r\n       \r\n          <CheckLogin loggedin={this.state.loggedin} name={this.state.name} />\r\n            </div>\r\n\r\n     \r\n     )}\r\n  };\r\n  export default (Nav);","import \"./PredefQues.css\";\r\nimport Quiz from \"./components/quiz.jsx\";\r\nimport Start from \"./components/start.js\";\r\nimport React, { Component } from \"react\";\r\nimport Nav from \"./nav\"\r\n// Main App class\r\nclass PredefQues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isRunning: false,\r\n            isLoading: true,\r\n            categories: [],\r\n            error: [],\r\n            questions: [],\r\n        };\r\n        this.startQuiz = this.startQuiz.bind(this);\r\n        this.handleRestart = this.handleRestart.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"https://opentdb.com/api_category.php\")\r\n            .then((response) => response.json())\r\n            .then((data) =>\r\n                this.setState({\r\n                    categories: data.trivia_categories,\r\n                    isLoading: false,\r\n                })\r\n            )\r\n            .catch((error) => this.setState({ error, isLoading: false }));\r\n    }\r\n    // Starts the quiz after choices selected\r\n    startQuiz(values) {\r\n        this.setState({ isLoading: true });\r\n        const { category, difficulty, type } = values;\r\n        const url =\r\n            \"https://opentdb.com/api.php?amount=10&category=\" +\r\n            category +\r\n            \"&difficulty=\" +\r\n            difficulty +\r\n            \"&type=\" +\r\n            type;\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.response_code === 0) {\r\n\r\n                    this.setState({\r\n                        questions: data.results,\r\n                        isLoading: false,\r\n                        isRunning: true,  });\r\n                } else {\r\n                    throw new Error(\"API Error\");\r\n                }\r\n            })\r\n            .catch((error) => this.setState({ error, isLoading: false }));\r\n    }\r\n    handleRestart() {\r\n        this.setState({ isRunning: false });\r\n    }\r\n    render() {\r\n        const {\r\n            isRunning,\r\n            categories,\r\n            questions,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <Nav />\r\n                {!isRunning && (\r\n                    <Start startQuiz={this.startQuiz} categories={categories} />\r\n                )}\r\n                {isRunning && (\r\n                    <Quiz restartQuiz={this.handleRestart} questions={questions}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }   }\r\nexport default PredefQues;","import React from 'react';\nimport { Container, Row, Col, Hidden } from 'react-grid-system';\nimport { Link } from 'react-router-dom';\n\nimport Nav from './nav';\nimport Button from './Button';\n\nconst Card = ({ title, subtitle, link, button }) => (\n  <div className=\"card\" style={{marginLeft:'0px'}}>\n    <h2>{title}</h2>\n    <h3>{subtitle}</h3>\n    <Link to={link}>\n      <Button>{button}</Button>\n    </Link>\n  </div>\n);\n\nconst Home = () => {\n  return (\n    <div>\n    <Nav/>\n    <Container className=\"home-page top-anxiety\" style={{marginTop:\"40px\"}}>\n      <Row>\n        <Hidden xs>\n          <Col lg={3}>\n            <Card\n              title=\"Quizz Host\"\n              subtitle=\"host a Quizz Night!\"\n              link=\"/createcustom\"\n              button=\"Start!\"\n            />\n          </Col>\n        </Hidden>\n        <Col lg={3}>\n          <Card\n            title=\"Room\"\n            subtitle=\"join a Quizz Night!\"\n            link=\"/Room\"\n            button=\"Join!\"\n          />\n        </Col>\n        <Hidden xs>\n        <Col lg={3}>\n            <Card\n              title=\"Scoreboard\"\n              subtitle=\"Set up a scoreboard of your Quizz and view the rankings!\"\n              link=\"/Room\"\n              button=\"View!\"\n            />\n          </Col>\n        </Hidden>\n        <Col lg={3}>\n          <Card\n            title=\"PreLoaded Question\"\n            subtitle=\"Attempt a quiz with questions that are already available.Select a Category, Field and Difficulty.\"\n            link=\"/predefinedques\"\n            button=\"Attempt!\"\n          />\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Nav from './nav'\r\n\r\nclass HostEnd extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\nrender(){          \r\n      return(   \r\n          <div>\r\n      <div style={{alignSelf:\"center\"}}>\r\n          <Nav />\r\n          <Card style={{width:\"50%\",marginLeft:\"325px\",}}>\r\n<Card.Title>\r\n    <h2>ROOM CODE : {this.props.roomcode}</h2>\r\n</Card.Title>\r\n\r\n              </Card>  \r\n        </div>\r\n        </div>\r\n)}\r\n    }\r\n\r\n\r\nexport default HostEnd;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Nav from './nav'\r\nimport Container from 'react-bootstrap/Container';\r\nimport './QuesInput.css';\r\nimport HostEnd from \"./HostEnd\"\r\n\r\nclass QuesInput extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n  this.state={\r\n    roomcode: 0,\r\n    isCompleted : false,\r\n    index : 0,\r\n    selected: 0,\r\n    option1 : \"\",\r\n    option2 : \"\",\r\n    option3 : \"\",\r\n    option4 : \"\",\r\n    question : \"\",\r\n    questionArray : [],\r\n    optionsArray : [],\r\n    correctAnswers:[],\r\n  };\r\n  this.clearInputs = this.clearInputs.bind(this);\r\n  this.nextQues = this.nextQues.bind(this); \r\n  this.finished = this.finished.bind(this);\r\n  this.handleChange = this.handleChange.bind(this); \r\n  }\r\n  finished(){\r\n    this.nextQues();\r\n    const roomcode= Math.floor(1000 + Math.random()*9000);\r\n    this.setState({roomcode : roomcode})\r\n    const questions=this.state.questionArray;\r\n    const options=this.state.optionsArray;\r\n    const correctoption=this.state.correctAnswers;\r\n    const host = localStorage.getItem(\"name\");\r\n    const timer= this.props.timer;\r\n    const timersec = this.props.timersec;\r\n    fetch('https://aqueous-waters-26248.herokuapp.com/api/users/hostquestion', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        roomname:this.props.quizname,\r\n        roomcode:roomcode,\r\n        questions:questions,\r\n        options:options,\r\n        correctanswers:correctoption,\r\n        host : host,\r\n        timer : timer,\r\n        timersec : timersec,\r\n        cutoff : this.props.cutoff,\r\n        totallevel : this.props.totallevel,\r\n        level : this.props.level,\r\n      })\r\n    }).then((res) => res.json(roomcode))\r\n    .catch((error) =>\r\n      alert(\"Show me error that cannot be specify\", error)\r\n    )\r\n    .then((response) => {\r\n      this.setState({isCompleted : true});\r\n      console.log(\"Success:\", response);\r\n    }); \r\n  }\r\n  nextQues(){\r\n    let { questionArray, optionsArray, correctAnswers } = this.state;\r\n    const options=[this.state.option1,this.state.option2,this.state.option3,this.state.option4];\r\n    questionArray.push(this.state.question);\r\n    optionsArray.push(options);\r\n    correctAnswers.push(options[this.state.selected]);\r\n    this.setState({questionArray: questionArray});\r\n    this.setState({optionsArray : optionsArray});\r\n    console.log(this.state.correctAnswers);\r\n    this.setState({correctAnswers : correctAnswers});\r\n    this.setState({index : this.state.index +1});\r\n    this.clearInputs();\r\n  }\r\n  clearInputs(){\r\n    this.setState({question : \"\"});\r\n    this.setState({option1 : \"\"});\r\n    this.setState({option2 : \"\"});\r\n    this.setState({option3 : \"\"});\r\n    this.setState({option4 : \"\"});\r\n  }\r\n  handleChange(event){\r\n    this.setState({ [event.target.name] : event.target.value}) \r\n    }   \r\n    render(){\r\n      if(this.state.isCompleted){\r\n        return( <HostEnd roomcode={this.state.roomcode} />);\r\n      }\r\n      const number=this.props.number;\r\n      const quizname=this.props.quizname;\r\n      const Button=()=>{\r\n        if(this.state.index === number-1){\r\n          return(\r\n          <button style={{width:\"fit-content\"}} variant=\"primary\" onClick={this.finished}>HOST</button>);\r\n            }\r\n            else{\r\n              return(\r\n             <button style={{width:\"fit-content\"}} variant=\"primary\" onClick={this.nextQues}>NEXT QUESTION</button>)\r\n            }\r\n      }\r\n      return( \r\n        <div>\r\n        <Nav />\r\n                  <Container>\r\n                  <div align = \"center\" style={{marginTop:\"10px\"}}>\r\n                <Card style={{ width: '45%' }} >\r\n                  <Card.Title><h2 style={{fontSize:\"25px\"}}>{quizname}</h2></Card.Title>\r\n                  <Card.Subtitle>Question No. {this.state.index+1}</Card.Subtitle>\r\n          <Card.Body>\r\n            \r\n           <div  className = \"space\">   \r\n            <textarea  style={{resize: 'none',width:\"75%\",height:\"50px\",textAlign:\"center\",fontSize:\"30px\"}} \r\n            name=\"question\" placeholder=\"enter the question\" onChange={this.handleChange}\r\n             value={this.state.question}/></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option1\"  placeholder=\"option 1\"onChange={this.handleChange} \r\n             value={this.state.option1} /></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option2\" placeholder=\"option 2\" onChange={this.handleChange} value={this.state.option2}/></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option3\" placeholder=\"option 3\" onChange={this.handleChange} value={this.state.option3}/></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option4\" placeholder=\"option 4\" onChange={this.handleChange} value={this.state.option4} /></div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3\">\r\n                           <h3 style={{fontWeight:\"normal\"}}>MENTION CORRECT ANSWER</h3>\r\n                           </div>\r\n              <div className=\"col-sm-6\">\r\n            <select name=\"selected\" onChange={this.handleChange} value={this.state.selected} className=\"custom-select\" style={{height:\"40px\",fontSize:\"18px\"}}>\r\n                      <option value=\"0\">option 1</option>\r\n                      <option value=\"1\">option 2</option>\r\n                      <option value=\"2\">option 3</option>\r\n                      <option value=\"3\">option 4</option>\r\n                    </select>\r\n                    </div>\r\n                    </div>\r\n                  <Button />\r\n                        </Card.Body>\r\n            </Card></div>\r\n        </Container>  \r\n        </div>\r\n)\r\n    }\r\n}\r\n\r\nexport default QuesInput;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport InputPage from \"./QuesInput\"\r\nimport \"./CreateCustom.css\"\r\nimport Nav from './nav'\r\nclass CreateCustom extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      numberQuestion:0,\r\n      Quizname :\"\",\r\n      start: false,\r\n      \r\n    };\r\n    this.CreateQues = this.CreateQues.bind(this); \r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event){\r\n    this.setState({ [event.target.name] : event.target.value}) \r\n    } \r\n  CreateQues(){\r\n    \r\n  this.setState({start : true});\r\n  }\r\n    render(){\r\n     if(this.state.start === true){\r\n      return(<InputPage number={this.state.numberQuestion} \r\n        timersec={0} timer={false} quizname={this.state.Quizname}\r\n        cutoff={0}/>);\r\n     }\r\n      return( \r\n          <div>\r\n          <Nav />\r\n          <Container>\r\n          <div align = \"center\" style={{marginTop:\"10px\"}}>\r\n        <Card style={{ width: '25rem' }} >\r\n  <Card.Body>\r\n    <h2>CREATE A QUIZ</h2>\r\n            <div  className = \"space\"> \r\n            <input type=\"text\" name=\"Quizname\" placeholder=\"Give your quiz a name\" onChange={this.handleChange} value={this.state.Quizname}/>\r\n    <input type=\"number\" step=\"5\" min =\"5\"  name=\"numberQuestion\" placeholder=\"No. of Questions\" onChange={this.handleChange} value={this.state.numberQuestion}/>\r\n    </div>\r\n    <button style={{width:\"fit-content\"}} variant=\"primary\" onClick={this.CreateQues}>NEXT STEP</button>\r\n    </Card.Body>\r\n    </Card></div>\r\n</Container>  \r\n</div>\r\n)\r\n    }\r\n}\r\n\r\nexport default CreateCustom;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Nav from './../nav';\r\n class Score extends Component {\r\n    constructor(props) {\r\n        super(props);}\r\n        render(){\r\nreturn(\r\n    <div>\r\n        <Nav />\r\n        <Card>\r\n       <Card.Title>\r\n          <h2> SCORE</h2>\r\n       </Card.Title>\r\n       <Card.Body>\r\n           <h2>You have answered {this.props.score} correct out of {this.props.number}</h2>\r\n       </Card.Body>\r\n        </Card>\r\n    </div>\r\n);\r\n }}\r\n export default Score;","import React, { Component } from \"react\";\r\nimport Score from \"./Score\";\r\nimport { Container,Row,Col} from 'react-grid-system'\r\nimport Nav from './../nav'\r\nimport {Card} from 'react-bootstrap'\r\nclass CustomQuiz extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isComplete: false,\r\n            score: 0,\r\n            incorrect: 0,\r\n            index:0,\r\n        };\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n     }\r\n         nextQuestion(selected,correct){\r\n             if(selected === correct){\r\n                 this.setState({score : this.state.score+1})\r\n             }\r\n             if(this.state.index===(this.props.questions.questions).length-1){\r\n                 console.log(this.state.score)\r\n                 this.setState({isComplete: true})\r\n                              }\r\n             else{\r\n             this.setState({index:this.state.index+1})\r\n         }}\r\n        \r\nrender(){\r\n    if(this.state.isComplete === true){\r\n        return( <Score  score={this.state.score} number={this.state.index+1}/>);\r\n    }\r\n    const question=this.props.questions.questions[this.state.index];\r\n    const options=this.props.questions.options[this.state.index];\r\n    const correctAnswer=this.props.questions.correctanswers[this.state.index];\r\n   return( \r\n       <div >\r\n       <Nav />\r\n       <Container>\r\n       <Card >\r\n           <Row>\r\n               <Col lg={4} style={{fontSize:\"18px\"}}>\r\n                   <h3>\r\n          ROOM CODE : {this.props.questions.roomcode}</h3>\r\n          <h3>\r\n          ROOM NAME : {this.props.questions.roomname}</h3>\r\n          </Col>\r\n          <Col lg={4}></Col>\r\n          <Col lg={4}><h3 style={{fontSize:'18px'}}>\r\n          HOSTED BY : {this.props.questions.host}</h3></Col>\r\n          </Row>\r\n          </Card>\r\n           <Card style={{marginTop:\"30px\",marginLeft:\"30%\",width:\"40%\",marginRight:\"30%\",height:\"fit-content\"}}>\r\n               <Card.Body>\r\n               <Card.Title>Question No. {this.state.index+1}</Card.Title>\r\n               <Card.Subtitle>\r\n                   {question}\r\n               </Card.Subtitle>\r\n               <div style={{marginRight:\"20%\",marginLeft:\"20%\",marginBottom:\"20px\",width:\"60%\"}}>\r\n               <button onClick={()=>this.nextQuestion(options[0],correctAnswer)}>{options[0]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[1],correctAnswer)}>{options[1]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[2],correctAnswer)}>{options[2]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[3],correctAnswer)}>{options[3]}</button>\r\n               </div>\r\n               </Card.Body>\r\n            </Card>\r\n            </Container>\r\n       </div>       \r\n   )\r\n};\r\n}\r\nexport default CustomQuiz;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Nav from \"./../nav\";\r\n class Score extends Component {\r\n    constructor(props) {\r\n        super(props);}\r\n        render(){\r\nreturn(\r\n    <div>\r\n        <Nav /> \r\n        <Card>\r\n       <Card.Title>\r\n          <h2> SCORE</h2>\r\n       </Card.Title>\r\n       <Card.Body>\r\n           <h2>You have answered {this.props.score} correct out of {this.props.number}</h2>\r\n       </Card.Body>\r\n        </Card>\r\n    </div>\r\n);\r\n }}\r\n export default Score;","import React, { Component } from \"react\";\r\nimport Score from \"./Score\";\r\nimport { Container,Row,Col} from 'react-grid-system'\r\nimport Nav from './../nav'\r\nimport {Card} from 'react-bootstrap'\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport './CustomQuiz.css'\r\nclass TimerAttend extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isComplete: false,\r\n            score: 0,\r\n            incorrect: 0,\r\n            index:0,\r\n        };\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n        this.nextQuestionTigger = this.nextQuestionTigger.bind(this);\r\n         }\r\n         nextQuestion(selected,correct){\r\n             if(selected === correct){\r\n                 this.setState({score : this.state.score+1}) }\r\n             if(this.state.index===(this.props.questions.questions).length-1){\r\n                 console.log(this.state.score)\r\n                 this.setState({isComplete: true})\r\n                              }\r\n             else{\r\n             this.setState({index:this.state.index+1})\r\n         }}\r\n         nextQuestionTigger(){\r\n            if(this.state.index===(this.props.questions.questions).length-1){\r\n                console.log(this.state.score)\r\n                this.setState({isComplete: true})  }\r\n           else{\r\n            this.setState({index:this.state.index+1});}\r\n            return [true,100]\r\n       }\r\nrender(){\r\n    if(this.state.isComplete === true){\r\n        return( <Score  score={this.state.score} number={this.state.index+1}/>);\r\n    }\r\n    const question=this.props.questions.questions[this.state.index];\r\n    const options=this.props.questions.options[this.state.index];\r\n    const correctAnswer=this.props.questions.correctanswers[this.state.index];\r\n    const renderTime = ({ remainingTime }) => {\r\n        if (remainingTime === 0) {\r\n          return <div className=\"timer\">Too lale...</div>;\r\n        }\r\n        return (\r\n          <div className=\"timer\">\r\n            <div className=\"text\">Remaining</div>\r\n            <div className=\"value\">{remainingTime}</div>\r\n            <div className=\"text\">seconds</div>\r\n          </div>\r\n        );\r\n      };\r\n   return( \r\n       <div >\r\n       <Nav />\r\n       <Container>\r\n       <Card>\r\n           <Row>\r\n               <Col lg={4} style={{fontSize:\"18px\"}}>\r\n                   <h3>\r\n          ROOM CODE : {this.props.questions.roomcode}</h3>\r\n          <h3>\r\n          ROOM NAME : {this.props.questions.roomname}</h3>\r\n          </Col>\r\n          < Col lg={4}>\r\n          <div className=\"timer-wrapper\"style={{Height:\"30px\"}}>\r\n        <CountdownCircleTimer\r\n          isPlaying\r\n          duration={this.props.questions.timersec}\r\n          strokeWidth={3}\r\n          size={130}\r\n          colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\r\n          onComplete={() => this.nextQuestionTigger()}\r\n        >\r\n          {renderTime}\r\n        </CountdownCircleTimer>\r\n      </div>\r\n          </Col>\r\n          <Col lg={4}><h3 style={{fontSize:'18px'}}>\r\n          HOSTED BY : {this.props.questions.host}</h3></Col>\r\n          </Row>\r\n          </Card>\r\n           <Card style={{marginTop:\"30px\",marginLeft:\"30%\",width:\"40%\",marginRight:\"30%\",height:\"fit-content\"}}>\r\n               <Card.Body>\r\n               <Card.Title>Question No. {this.state.index+1}</Card.Title>\r\n               <Card.Subtitle>\r\n                   {question}\r\n               </Card.Subtitle>\r\n               <div style={{marginRight:\"20%\",marginLeft:\"20%\",marginBottom:\"20px\",width:\"60%\"}}>\r\n               <button onClick={()=>this.nextQuestion(options[0],correctAnswer)}>{options[0]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[1],correctAnswer)}>{options[1]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[2],correctAnswer)}>{options[2]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[3],correctAnswer)}>{options[3]}</button>\r\n               </div>\r\n               </Card.Body>\r\n            </Card>\r\n            </Container>\r\n       </div>     )\r\n};   }\r\nexport default TimerAttend;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Nav from \"./../nav\"\r\n class Score extends Component {\r\n    constructor(props) {\r\n        super(props);}\r\n        render(){\r\nreturn(\r\n    <div>\r\n        <Nav />\r\n        <Card>\r\n       <Card.Title>\r\n          <h2> SCORE</h2>\r\n       </Card.Title>\r\n       <Card.Body>\r\n           <h2>You have answered {this.props.score} correct out of {this.props.number}</h2>\r\n       </Card.Body>\r\n        </Card>\r\n    </div>\r\n);\r\n }}\r\n export default Score;","import React, { Component } from \"react\";\r\nimport Score from \"./Score\";\r\nimport { Container,Row,Col} from 'react-grid-system'\r\nimport Nav from './../nav'\r\nimport {Card} from 'react-bootstrap'\r\n\r\nclass LevelQuiz extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isComplete: false,\r\n            score: 0,\r\n            incorrect: 0,\r\n            index:0,\r\n            message:\"\",\r\n            level:1,\r\n        };\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n        this.fetchnext = this.fetchnext.bind(this);\r\n     }\r\n     componentDidMount(){\r\n         this.setState({level : this.props.questions.level});\r\n     }\r\n         nextQuestion(selected,correct){\r\n             if(selected === correct){\r\n                 this.setState({score : this.state.score+1})\r\n             }\r\n             const percent=(this.state.score / ((this.props.questions.questions).length))*100;\r\n             if(this.state.index===(this.props.questions.questions).length-1){\r\n                 console.log(this.state.score)\r\n                 if(this.state.level == this.props.questions.totallevel){\r\n                    this.setState({message:\"You have completed all the level!!\"});\r\n                    this.setState({isComplete: true});\r\n                 }\r\n                 else if(percent >= this.props.questions.cutoff){\r\n                    this.setState({level : this.state.level + 1});\r\n                    this.fetchnext();\r\n                 }\r\n                 else{\r\n                   this.setState({message:\"Sorry!!, You are not eligible for next level.\"});\r\n                    this.setState({isComplete: true});\r\n                 }\r\n                              }\r\n             else{\r\n             this.setState({index:this.state.index+1})\r\n         }}\r\n        fetchnext(){\r\n                const roomcode = this.state.roomcode;\r\n                const level = this.state.level;\r\n                fetch(`https://aqueous-waters-26248.herokuapp.com/api/users/levelques?roomcode=${roomcode}&level=${level}`, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              if(data.success ){\r\n                  console.log(data.questions);\r\n                  this.props.questions=data.questions;\r\n              }\r\n              else {\r\n                  return(<h2>ERROR</h2>)\r\n              }\r\n            })\r\n         /*   .catch((error) =>\r\n            alert(\"Show me error that cannot be specify\", error)\r\n            ); */\r\n        } \r\nrender(){\r\n    if(this.state.isComplete === true){\r\n        return( <Score  score={this.state.score} number={this.state.index+1}/>);\r\n    }\r\n    const question=this.props.questions.questions[this.state.index];\r\n    const options=this.props.questions.options[this.state.index];\r\n    const correctAnswer=this.props.questions.correctanswers[this.state.index];\r\n   return( \r\n       <div >\r\n       <Nav />\r\n       <Container>\r\n       <Card >\r\n           <Row>\r\n               <Col lg={4} style={{fontSize:\"18px\"}}>\r\n                   <h3>\r\n          ROOM CODE : {this.props.questions.roomcode}</h3>\r\n          <h3>\r\n          ROOM NAME : {this.props.questions.roomname}</h3>\r\n          </Col>\r\n          <Col lg={4}>\r\n              LEVEL : {this.props.questions.level} Out of {this.props.questions.totallevel}\r\n          </Col>\r\n          <Col lg={4}><h3 style={{fontSize:'18px'}}>\r\n          HOSTED BY : {this.props.questions.host}</h3></Col>\r\n          </Row>\r\n          </Card>\r\n           <Card style={{marginTop:\"30px\",marginLeft:\"30%\",width:\"40%\",marginRight:\"30%\",height:\"fit-content\"}}>\r\n               <Card.Body>\r\n               <Card.Title>Question No. {this.state.index+1}</Card.Title>\r\n               <Card.Subtitle>\r\n                   {question}\r\n               </Card.Subtitle>\r\n               <div style={{marginRight:\"20%\",marginLeft:\"20%\",marginBottom:\"20px\",width:\"60%\"}}>\r\n               <button onClick={()=>this.nextQuestion(options[0],correctAnswer)}>{options[0]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[1],correctAnswer)}>{options[1]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[2],correctAnswer)}>{options[2]}</button>\r\n               <button onClick={()=>this.nextQuestion(options[3],correctAnswer)}>{options[3]}</button>\r\n               </div>\r\n               </Card.Body>\r\n            </Card>\r\n            </Container>\r\n       </div>       \r\n   )\r\n};\r\n}\r\nexport default LevelQuiz;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Nav from './nav'\r\nimport CustomQuiz from './CustomQuiz/CustomQuiz.js'\r\nimport TimerAttend from './TimerAttend/QuizAttend.js'\r\nimport LevelQuiz from './LevelQuiz/LevelQuiz.js';\r\n\r\nclass RoomHome extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n      this.state={\r\n          roomcode:\"\",\r\n          questions:[],\r\n          Running : false,\r\n      };\r\n      this.handleChange = this.handleChange.bind(this); \r\n      this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onSubmit(){\r\n        const roomcode = this.state.roomcode;\r\n        fetch(`https://aqueous-waters-26248.herokuapp.com/api/users/roomques?roomcode=${roomcode}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if(data.success ){\r\n          console.log(data.questions);\r\n          this.setState({questions : data.questions});\r\n          this.setState({Running : true})\r\n      }\r\n      else {\r\n          return(<h2>ERROR</h2>)\r\n      }\r\n    })\r\n /*   .catch((error) =>\r\n    alert(\"Show me error that cannot be specify\", error)\r\n    ); */\r\n} \r\n    handleChange(event){\r\n        this.setState({ [event.target.name] : event.target.value}) \r\n    }\r\nrender(){\r\n    if(this.state.Running === true){\r\n    if(this.state.questions.timer){\r\n        return(<TimerAttend questions={this.state.questions}/>);\r\n    }\r\n    else if(this.state.questions.cutoff != 0){\r\n        return(<LevelQuiz questions={this.state.questions} />);\r\n        \r\n    }\r\n    else{\r\n        return(\r\n<CustomQuiz questions={this.state.questions}/>);\r\n    }}\r\n             \r\n      return( \r\n         \r\n      <div style={{alignSelf:\"center\"}}>\r\n          <Nav />\r\n          <Card style={{width:\"50%\",marginLeft:\"325px\"}}>\r\n<Card.Title>\r\n    <h2>Enter Room Code</h2>\r\n</Card.Title>\r\n<Card.Body>\r\n    <input style={{width:\"50%\"}} type=\"number\" name=\"roomcode\" value={this.state.roomcode} onChange={this.handleChange}/>\r\n<button style={{width:\"40%\",border:\"1px solid black\",margin:\"10px 30% 10px 30%\"}}\r\n   onClick={this.onSubmit}>Start Quiz</button>\r\n</Card.Body>\r\n              </Card>  \r\n        </div>\r\n)}\r\n    }\r\n\r\n\r\nexport default RoomHome;","export default [\n    {\n        question: 'We can go for keys when there is possibility that our user could change the data?',\n        answers: [\n            'Keys',\n            'Ref',\n            'Both',\n            'None of above'\n        ],\n        correct: 1\n    },\n\n    {\n        question: 'JSX is typesafe?',\n        answers: [\n            'True',\n            'False',\n            'None of the Above',\n            'Cannot Be Determined'\n        ],\n        correct: 1\n    },    \n    {\n        question: 'React merges the object you provide into the current state using which of the following',\n        answers: [\n            'setState()',\n            'State()', \n            'getState()', \n            'None of the Above'\n        ],    \n        correct: 1\n    },    \n    {\n        question: 'Arbitrary inputs of components are called?',\n        answers: [\n            'Keys',\n            'Props', \n            'Elements', \n            'Ref'\n        ],    \n        correct: 2\n    },\n    {\n        question: '_____ can be done while more than one element needs to be returned from a component?',\n        answers: [\n            'Abstraction',\n            'Packing', \n            'Insulation', \n            'Wrapping'\n        ],    \n        correct: 4\n    },\n    {\n        question: 'Which of the following needs to be updated to achieve dynamic UI updates?',\n        answers: [\n            'State',\n            'Props', \n            'Components', \n            'None of the Above'\n        ],    \n        correct: 1\n    },\n    {\n        question: 'Lifecycle methods are mainly used _____',\n        answers: [\n            'To keep track of event history',\n            'To enhance components', \n            'Free up resources', \n            'None of the Above'\n        ],    \n        correct: 3\n    }\n]","import React, {Component} from 'react';\n\nclass Answers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAnswered: false,\n            classNames: ['', '', '', '']\n        }\n        \n        this.checkAnswer = this.checkAnswer.bind(this);\n        this.clearClasses = this.clearClasses.bind(this);\n    }\n    \n    checkAnswer(e) {\n        let { isAnswered } = this.props;\n        \n        if(!isAnswered) {\n            let elem = e.currentTarget;\n            let { correct, increaseScore } = this.props;\n            let answer = Number(elem.dataset.id);\n            let updatedClassNames = this.state.classNames;\n\n            if(answer === correct){\n                updatedClassNames[answer-1] = 'right';\n                increaseScore();\n            }\n            else {\n                updatedClassNames[answer-1] = 'wrong';\n            }\n            \n            this.setState({\n                classNames: updatedClassNames,\n                \n            })\n\n            this.props.showButton();       \n            var myTime = setTimeout(() => {\n                this.clearClasses();\n                //console.log(\"IN SET Timeout\")\n            }, 5000);\n        }\n    }\n    clearClasses(){\n        this.setState({\n            classNames: ['', '', '', '']\n        })\n        \n    }\n    render() {\n        let { answers } = this.props;\n        let { classNames } = this.state;\n        \n        let transition = {\n            transitionName: \"example\",\n            transitionEnterTimeout: 500,\n            transitionLeaveTimeout: 300\n        }\n        \n        return (\n            <div id=\"answers\">\n                <ul>\n                    <li onClick={this.checkAnswer} \n                        className={classNames[0]} data-id=\"1\">\n                    <span>A</span> \n                    <p>{answers[0]}</p></li>\n\n                    <li onClick={this.checkAnswer} \n                        className={classNames[1]} data-id=\"2\">\n                    <span>B</span> \n                    <p>{answers[1]}</p></li>\n\n                    <li onClick={this.checkAnswer} \n                        className={classNames[2]} data-id=\"3\">\n                    <span>C</span> \n                    <p>{answers[2]}</p></li>\n\n                    <li onClick={this.checkAnswer} \n                        className={classNames[3]} data-id=\"4\">\n                    <span>D</span> \n                    <p>{answers[3]}</p></li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Answers","import React, { Component } from 'react';\nimport data from '../questions_data/data';\nimport Answers from './Answers.jsx';\nimport Nav from '../../component/nav'\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0,\n            total: data.length,\n            showButton: false,\n            questionAnswered: false,\n            score: 0,\n            displayPopup: 'flex'\n        }\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.handleShowButton = this.handleShowButton.bind(this);\n        this.handleStartQuiz = this.handleStartQuiz.bind(this);\n        this.handleIncreaseScore = this.handleIncreaseScore.bind(this);\n    }\n\n    componentWillMount() {\n        let { count } = this.state;\n        this.insertData(count);\n    }\n\n    insertData(count) {\n        this.setState({\n            question: data[count].question,\n            answers: [  data[count].answers[0], \n                        data[count].answers[1], \n                        data[count].answers[2], \n                        data[count].answers[3] \n                    ],\n            correct: data[count].correct,\n            count: this.state.count + 1\n        });\n    }\n\n\n    handleShowButton() {\n        this.setState({\n            showButton: true,\n            questionAnswered: true\n        })\n    }\n    \n    nextQuestion() {\n        let { count, total} = this.state;\n\n        if(count === total){\n            this.setState({\n                displayPopup: 'flex'\n            });\n        } else {\n            this.insertData(count);\n            this.setState({\n                showButton: false,\n                questionAnswered: false\n            });\n        }\n    }\n\n    handleStartQuiz() {\n        this.setState({\n            displayPopup: 'none',\n            count: 1\n        });\n    }\n\n    handleIncreaseScore() {\n        this.setState({\n            score: this.state.score + 1\n        });\n    }\n\n  render() {\n\n    let { count, total, question, answers, correct, showButton, questionAnswered, displayPopup, score} = this.state;\n\n    return (\n   \n      <div className=\"container\">\n         <Nav/>\n        <div className=\"row\">\n            <div className=\"col-lg-12 col-md-10\">\n                <div id=\"question\">\n                    <h4 className=\"bg-light\">Question {count}/{total}</h4>\n                    <p>{question}</p>\n                </div>\n\n                <Answers \n                    answers={answers} \n                    correct={correct} \n                    showButton={this.handleShowButton} \n                    isAnswered={questionAnswered} \n                    increaseScore={this.handleIncreaseScore}\n                />\n\n\n                <div id=\"submit\">\n                    {showButton ? \n                    <button className=\"fancy-btn\" \n                            onClick={this.nextQuestion} >\n                    {count === total ? 'Finish quiz' : 'Next question'}\n                    </button> : <span></span>}\n                </div>\n            </div>\n        </div>\n\n\n      </div>\n    )\n  }\n}\nexport default Main;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { wsConnect } from '../reducers/websocket';\nimport Button from './Button';\n\nconst RecoverButton = () => {\n  const connecting = useSelector(state => state.websocket.connecting);\n  const dispatch = useDispatch();\n\n  return (\n    <Button type=\"secondary recover\" onClick={() => dispatch(wsConnect())} disabled={connecting}>\n      {connecting ? (\n        <svg\n          class=\"lds-gears\"\n          width=\"100%\"\n          height=\"100%\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid\"\n        >\n          <g transform=\"translate(50 50)\">\n            <g transform=\"translate(-19 -19) scale(0.6)\">\n              <g transform=\"rotate(273.528)\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  values=\"0;360\"\n                  keyTimes=\"0;1\"\n                  dur=\"1s\"\n                  begin=\"0s\"\n                  repeatCount=\"indefinite\"\n                ></animateTransform>\n                <path\n                  d=\"M37.3496987939662 -7 L47.3496987939662 -7 L47.3496987939662 7 L37.3496987939662 7 A38 38 0 0 1 31.359972760794346 21.46047782418268 L31.359972760794346 21.46047782418268 L38.431040572659825 28.531545636048154 L28.531545636048154 38.431040572659825 L21.46047782418268 31.359972760794346 A38 38 0 0 1 7.0000000000000036 37.3496987939662 L7.0000000000000036 37.3496987939662 L7.000000000000004 47.3496987939662 L-6.999999999999999 47.3496987939662 L-7 37.3496987939662 A38 38 0 0 1 -21.46047782418268 31.35997276079435 L-21.46047782418268 31.35997276079435 L-28.531545636048154 38.431040572659825 L-38.43104057265982 28.531545636048158 L-31.359972760794346 21.460477824182682 A38 38 0 0 1 -37.3496987939662 7.000000000000007 L-37.3496987939662 7.000000000000007 L-47.3496987939662 7.000000000000008 L-47.3496987939662 -6.9999999999999964 L-37.3496987939662 -6.999999999999997 A38 38 0 0 1 -31.35997276079435 -21.460477824182675 L-31.35997276079435 -21.460477824182675 L-38.431040572659825 -28.531545636048147 L-28.53154563604818 -38.4310405726598 L-21.4604778241827 -31.35997276079433 A38 38 0 0 1 -6.999999999999992 -37.3496987939662 L-6.999999999999992 -37.3496987939662 L-6.999999999999994 -47.3496987939662 L6.999999999999977 -47.3496987939662 L6.999999999999979 -37.3496987939662 A38 38 0 0 1 21.460477824182686 -31.359972760794342 L21.460477824182686 -31.359972760794342 L28.531545636048158 -38.43104057265982 L38.4310405726598 -28.53154563604818 L31.35997276079433 -21.4604778241827 A38 38 0 0 1 37.3496987939662 -6.999999999999995 M0 -23A23 23 0 1 0 0 23 A23 23 0 1 0 0 -23\"\n                  fill=\"#b55400\"\n                ></path>\n              </g>\n            </g>\n            <g transform=\"translate(19 19) scale(0.6)\">\n              <g transform=\"rotate(63.9724)\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  values=\"360;0\"\n                  keyTimes=\"0;1\"\n                  dur=\"1s\"\n                  begin=\"-0.0625s\"\n                  repeatCount=\"indefinite\"\n                ></animateTransform>\n                <path\n                  d=\"M37.3496987939662 -7 L47.3496987939662 -7 L47.3496987939662 7 L37.3496987939662 7 A38 38 0 0 1 31.359972760794346 21.46047782418268 L31.359972760794346 21.46047782418268 L38.431040572659825 28.531545636048154 L28.531545636048154 38.431040572659825 L21.46047782418268 31.359972760794346 A38 38 0 0 1 7.0000000000000036 37.3496987939662 L7.0000000000000036 37.3496987939662 L7.000000000000004 47.3496987939662 L-6.999999999999999 47.3496987939662 L-7 37.3496987939662 A38 38 0 0 1 -21.46047782418268 31.35997276079435 L-21.46047782418268 31.35997276079435 L-28.531545636048154 38.431040572659825 L-38.43104057265982 28.531545636048158 L-31.359972760794346 21.460477824182682 A38 38 0 0 1 -37.3496987939662 7.000000000000007 L-37.3496987939662 7.000000000000007 L-47.3496987939662 7.000000000000008 L-47.3496987939662 -6.9999999999999964 L-37.3496987939662 -6.999999999999997 A38 38 0 0 1 -31.35997276079435 -21.460477824182675 L-31.35997276079435 -21.460477824182675 L-38.431040572659825 -28.531545636048147 L-28.53154563604818 -38.4310405726598 L-21.4604778241827 -31.35997276079433 A38 38 0 0 1 -6.999999999999992 -37.3496987939662 L-6.999999999999992 -37.3496987939662 L-6.999999999999994 -47.3496987939662 L6.999999999999977 -47.3496987939662 L6.999999999999979 -37.3496987939662 A38 38 0 0 1 21.460477824182686 -31.359972760794342 L21.460477824182686 -31.359972760794342 L28.531545636048158 -38.43104057265982 L38.4310405726598 -28.53154563604818 L31.35997276079433 -21.4604778241827 A38 38 0 0 1 37.3496987939662 -6.999999999999995 M0 -23A23 23 0 1 0 0 23 A23 23 0 1 0 0 -23\"\n                  fill=\"#222831\"\n                ></path>\n              </g>\n            </g>\n          </g>\n        </svg>\n      ) : (\n        <span role=\"img\" aria-label=\"recover_connection\">\n          ♻️\n        </span>\n      )}\n    </Button>\n  );\n};\n\nexport default RecoverButton;\n","import React from 'react';\n\nimport { SemipolarLoading } from 'react-loadingg';\nconst Loader = () => <SemipolarLoading />;\n\n\nexport default Loader;\n","import React from 'react'\r\nimport './Login.css'\r\nimport Nav from '.././nav';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from \"universal-cookie\";\r\nimport Loader from '.././Loader'\r\nimport Home from \".././Home\"\r\nclass Login extends React.Component {\r\n   constructor(props) {\r\n   super(props);  \r\n  this.state = { email:\"\", password:\"\" }\r\n  this.handleSubmit = this.handleSubmit.bind(this);\r\n  this.handleChange = this.handleChange.bind(this);\r\n  this.Load = this.Load.bind(this);\r\n}\r\nasync handleSubmit(event) {\r\n  event.preventDefault()\r\n  const cookies = new Cookies();\r\n  cookies.set(\"email\", this.state.email[0]);\r\n  cookies.set(\"password\", this.state.password[0]);\r\n  console.log(cookies.get(\"email\"));\r\n  const email = this.state.email\r\n  const password = this.state.password\r\n  this.Load();\r\n fetch('https://aqueous-waters-26248.herokuapp.com/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password\r\n    })\r\n  }).then((res) => res.json())\r\n  .catch((error) =>\r\n    console.error(\"Show me error that cannot be specify\", error)\r\n  )\r\n  .then((response) => {\r\n    console.log(\"Success:\", response);\r\n    if(response.success){\r\n    localStorage.setItem(\"loggedin\", true);\r\n    localStorage.setItem(\"token\", response.token);\r\n    localStorage.setItem(\"name\", response.name);\r\n    return(<Home />);\r\n  }\r\n    else if(response.emailnotfound){\r\n      alert(\"Email doesn't exist\");\r\n    }\r\n   else if(response.passwordincorrect){\r\n      alert('Password incorrect');\r\n}\r\n  });\r\n}\r\nLoad(){\r\n  return <Loader />;\r\n}\r\n handleChange(event){\r\n  this.setState({ [event.target.name] : event.target.value}) \r\n  }   \r\n      render(){\r\n        return (\r\n          <div>\r\n          <Nav />\r\n          \r\n        <div id=\"loginform\">\r\n         <FormHeader title=\"Login\" />\r\n         <div className=\"row\">\r\n        <input name=\"email\" type=\"text\" placeholder=\"email id\" value={this.state.email} onChange={this.handleChange}/>\r\n      </div> \r\n      <div className=\"row\">\r\n        <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n      </div>\r\n              <div className=\"row\">\r\n         <button className=\"button-login button-1\" onClick={this.handleSubmit}>LOGIN</button>\r\n         </div>\r\n         <div id=\"alternativeLogin\">\r\n        <div>New user? Then, Register </div>\r\n      </div>\r\n         <div className=\"row\">\r\n           <Link to=\"/register\">\r\n         <button className=\"button-login button-1\"  >SignUp</button>\r\n         </Link>\r\n         </div>\r\n          </div>\r\n          </div>\r\n        );\r\n        }        \r\n      }\r\n    const FormHeader = props => (\r\n        <h2 id=\"headerTitle\">{props.title}</h2>\r\n    );\r\n\r\n    export default(Login);","import React from 'react'\r\nimport './Signup.css'\r\nimport Nav from '../nav';\r\nimport { Container } from 'react-grid-system';\r\nimport { Link } from 'react-router-dom';\r\nimport Home from\".././Home\"; \r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name:\"\",email:\"\", password:\"\" }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n   \r\n  \r\n  async handleSubmit(event) {\r\n    event.preventDefault()\r\n    const email = this.state.email\r\n    const password = this.state.password\r\n    const name = this.state.name\r\n   fetch('https://aqueous-waters-26248.herokuapp.com/api/users/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n        name\r\n      })\r\n    }).then((res) => res.json())\r\n    .catch((error) =>\r\n      console.error(\"Show me error that cannot be specify\", error)\r\n    )\r\n    .then((response) => {\r\n      console.log(\"Success:\", response);\r\n      if(response.success){\r\n      alert(\"Logged in\")\r\n      localStorage.setItem(\"loggedin\", true);\r\n      localStorage.setItem(\"token\", response.token);\r\n      localStorage.setItem(\"name\", response.name);\r\n      return(<Home />);\r\n    }\r\n      else if(response.emailnotfound){\r\n        alert(\"Email doesn't exist\");\r\n      }\r\n     else if(response.passwordincorrect){\r\n        alert('Password incorrect');\r\n  }  \r\n    });\r\n  }\r\n   handleChange(event){\r\n    this.setState({ [event.target.name] : event.target.value}) \r\n    }   \r\n        render(){\r\n          return (\r\n            <div>\r\n            <Nav />\r\n            <Container>\r\n          <div id=\"loginform\">\r\n           <FormHeader title=\"SignUp\" />\r\n           <div className=\"row\">\r\n          <input name=\"name\" type=\"text\" placeholder=\"user name\" value={this.state.name} onChange={this.handleChange} required/>\r\n        </div>\r\n           <div className=\"row\">\r\n          <input name=\"email\" type=\"text\" placeholder=\"email id\" value={this.state.email} onChange={this.handleChange} required/>\r\n        </div> \r\n        <div className=\"row\">\r\n          <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange} required/>\r\n        </div>\r\n        \r\n                <div className=\"row\">\r\n           <button className=\"button-login button-1\" onClick={this.handleSubmit}>register</button>\r\n           </div>\r\n           <div class=\"col-md-2\">\r\n           <div id=\"alternativeLogin\">\r\n          <div>Already an user? Then, Login </div>\r\n        </div>\r\n           <div className=\"row\">\r\n             <Link to=\"/login\">\r\n           <button className=\"button-login button-1\" >Login</button>\r\n           </Link>\r\n           </div>\r\n           </div>\r\n            </div>\r\n            </Container>\r\n            </div>\r\n          );\r\n          }        \r\n        }\r\n\r\n      const FormHeader = props => (\r\n          <h2 id=\"headerTitle\">{props.title}</h2>\r\n      );\r\n\r\n    export default(Signup);","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Nav from './nav'\r\nimport Container from 'react-bootstrap/Container';\r\nimport './QuesInput.css';\r\nimport HostEnd from \"./HostEnd\"\r\n\r\nclass LevelInput extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n  this.state={\r\n    roomcode: 0,\r\n    isCompleted : false,\r\n    index : 0,\r\n    level : 1,\r\n    selected: 0,\r\n    option1 : \"\",\r\n    option2 : \"\",\r\n    option3 : \"\",\r\n    option4 : \"\",\r\n    question : \"\",\r\n    questionArray : [],\r\n    optionsArray : [],\r\n    correctAnswers:[],\r\n  };\r\n  this.clearInputs = this.clearInputs.bind(this);\r\n  this.nextQues = this.nextQues.bind(this); \r\n  this.finished = this.finished.bind(this);\r\n  this.handleChange = this.handleChange.bind(this); \r\n  }\r\ncomponentDidMount(){\r\n        const roomcode= Math.floor(1000 + Math.random()*9000);\r\n        this.setState({roomcode : roomcode});\r\n}\r\n  finished(){    \r\n    const questions=this.state.questionArray;\r\n    const options=this.state.optionsArray;\r\n    const correctoption=this.state.correctAnswers;\r\n    const host = localStorage.getItem(\"name\");\r\n    const timer= this.props.timer;\r\n    const timersec = this.props.timersec;\r\n    fetch('https://aqueous-waters-26248.herokuapp.com/api/users/hostquestion', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        roomname:this.props.quizname,\r\n        roomcode:this.state.roomcode,\r\n        questions:questions,\r\n        options:options,\r\n        correctanswers:correctoption,\r\n        host : host,\r\n        timer : timer,\r\n        timersec : timersec,\r\n        cutoff : this.props.cutoff,\r\n        totallevel : this.props.totallevel,\r\n        level : this.state.level,\r\n      })\r\n    }).then((res) => res.json(res))\r\n    .catch((error) =>\r\n      alert(\"Show me error that cannot be specify\", error)\r\n    )\r\n    .then((response) => {\r\n        if(this.state.level == this.props.totallevel){\r\n      this.setState({isCompleted : true});  }\r\n       else{\r\n           this.setState({questionArray: []});\r\n           this.setState({optionsArray: []});\r\n           this.setState({correctoption: []});\r\n           this.setState({index : 0});\r\n           this.setState({level : this.state.level+1});\r\n           this.clearInputs();\r\n       }\r\n      console.log(\"Success:\", response);\r\n    }); \r\n    this.nextQues();\r\n  }\r\n  nextQues(){\r\n    let { questionArray, optionsArray, correctAnswers } = this.state;\r\n    const options=[this.state.option1,this.state.option2,this.state.option3,this.state.option4];\r\n    questionArray.push(this.state.question);\r\n    optionsArray.push(options);\r\n    correctAnswers.push(options[this.state.selected]);\r\n    this.setState({questionArray: questionArray});\r\n    this.setState({optionsArray : optionsArray});\r\n    console.log(this.state.correctAnswers);\r\n    this.setState({correctAnswers : correctAnswers});\r\n    this.setState({index : this.state.index +1});\r\n    this.clearInputs();\r\n  }\r\n  clearInputs(){\r\n    this.setState({question : \"\"});\r\n    this.setState({option1 : \"\"});\r\n    this.setState({option2 : \"\"});\r\n    this.setState({option3 : \"\"});\r\n    this.setState({option4 : \"\"});\r\n  }\r\n  handleChange(event){\r\n    this.setState({ [event.target.name] : event.target.value}) \r\n    }   \r\n    render(){\r\n\r\n      if(this.state.isCompleted){\r\n        return( <HostEnd roomcode={this.state.roomcode} />);\r\n      }\r\n      const number=this.props.number;\r\n      const quizname=this.props.quizname;\r\n      const Button=()=>{\r\n        if(this.state.index === number-1){\r\n          return(\r\n          <button style={{width:\"fit-content\"}} variant=\"primary\" onClick={this.finished}>HOST</button>);\r\n            }\r\n            else{\r\n              return(\r\n             <button style={{width:\"fit-content\"}} variant=\"primary\" onClick={this.nextQues}>NEXT QUESTION</button>)\r\n            }\r\n      }\r\n      return( \r\n        <div>\r\n        <Nav />\r\n                  <Container>\r\n                  <div align = \"center\" style={{marginTop:\"10px\"}}>\r\n                <Card style={{ width: '45%' }} >\r\n                  <Card.Title><h2 style={{fontSize:\"25px\"}}>{quizname}</h2></Card.Title>\r\n                  <Card.Subtitle>Question No. {this.state.index+1}</Card.Subtitle>\r\n                  <Card.Subtitle>Level . {this.state.level}</Card.Subtitle>\r\n          <Card.Body>\r\n            \r\n           <div  className = \"space\">   \r\n            <textarea  style={{resize: 'none',width:\"75%\",height:\"50px\",textAlign:\"center\",fontSize:\"30px\"}} \r\n            name=\"question\" placeholder=\"enter the question\" onChange={this.handleChange}\r\n             value={this.state.question}/></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option1\"  placeholder=\"option 1\"onChange={this.handleChange} \r\n             value={this.state.option1} /></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option2\" placeholder=\"option 2\" onChange={this.handleChange} value={this.state.option2}/></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option3\" placeholder=\"option 3\" onChange={this.handleChange} value={this.state.option3}/></div>\r\n            <div  className = \"space\">\r\n            <input name=\"option4\" placeholder=\"option 4\" onChange={this.handleChange} value={this.state.option4} /></div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-3\">\r\n                           <h3 style={{fontWeight:\"normal\"}}>MENTION CORRECT ANSWER</h3>\r\n                           </div>\r\n              <div className=\"col-sm-6\">\r\n            <select name=\"selected\" onChange={this.handleChange} value={this.state.selected} className=\"custom-select\" style={{height:\"40px\",fontSize:\"18px\"}}>\r\n                      <option value=\"0\">option 1</option>\r\n                      <option value=\"1\">option 2</option>\r\n                      <option value=\"2\">option 3</option>\r\n                      <option value=\"3\">option 4</option>\r\n                    </select>\r\n                    </div>\r\n                    </div>\r\n                  <Button />\r\n                        </Card.Body>\r\n            </Card></div>\r\n        </Container>  \r\n        </div>\r\n)\r\n    }\r\n}\r\n\r\nexport default LevelInput;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport InputPage from \"./LevelInput\"\r\nimport \"./CreateCustom.css\"\r\nimport Nav from './nav'\r\nclass LevelHome extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      numberQuestion:null,\r\n      Quizname :\"\",\r\n      start: false,\r\n      timerSec:0,\r\n      cutoff:null,\r\n      totallevel:null,\r\n    };\r\n    this.CreateQues = this.CreateQues.bind(this); \r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event){\r\n    this.setState({ [event.target.name] : event.target.value}) \r\n    } \r\n  CreateQues(){\r\n    \r\n  this.setState({start : true});\r\n  }\r\n    render(){\r\n     if(this.state.start === true){\r\n      return(<InputPage number={this.state.numberQuestion} quizname={this.state.Quizname}\r\n        timersec={this.state.timerSec} timer={false} cutoff={this.state.cutoff} totallevel={this.state.totallevel}/>);\r\n     }\r\n      return( \r\n          <div>\r\n          <Nav />\r\n          <Container>\r\n          <div align = \"center\" style={{marginTop:\"10px\"}}>\r\n        <Card style={{ width: '25rem' }} >\r\n  <Card.Body>\r\n    <h2>CREATE A LEVEL-BASED QUIZ</h2>\r\n            <div  className = \"space\"> \r\n            <input type=\"text\" name=\"Quizname\" placeholder=\"Give your quiz a name\" onChange={this.handleChange} value={this.state.Quizname}/>\r\n    <input type=\"number\" min =\"1\"  name=\"numberQuestion\" placeholder=\"No. of Questions\" onChange={this.handleChange} value={this.state.numberQuestion}/>\r\n    </div>\r\n    <div className = \"space\">\r\n              <input type=\"number\" min =\"1\"  name=\"cutoff\" placeholder=\"Enter the cutoff in percentage\" onChange={this.handleChange} value={this.state.cutoff}/>\r\n              <input type=\"number\" min =\"1\"  name=\"totallevel\" placeholder=\"Enter No. Of Level\" onChange={this.handleChange} value={this.state.totallevel}/>\r\n    </div>\r\n    <button style={{width:\"fit-content\"}} variant=\"primary\" onClick={this.CreateQues}>NEXT STEP</button>\r\n    </Card.Body>\r\n    </Card></div>\r\n</Container>  \r\n</div>\r\n)\r\n    }\r\n}\r\n\r\nexport default LevelHome;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport InputPage from \"./QuesInput\"\r\nimport \"./CreateCustom.css\"\r\nimport Nav from './nav'\r\nclass TimerQuiz extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      numberQuestion:null,\r\n      Quizname :\"\",\r\n      start: false,\r\n      timer:true,\r\n      timerSec:30,\r\n    };\r\n    this.CreateQues = this.CreateQues.bind(this); \r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event){\r\n    this.setState({ [event.target.name] : event.target.value}) \r\n    } \r\n  CreateQues(){\r\n    \r\n  this.setState({start : true});\r\n  }\r\n    render(){\r\n     if(this.state.start === true){\r\n       console.log(this.state.timerSec);\r\n      return(<InputPage number={this.state.numberQuestion} quizname={this.state.Quizname}\r\n        timersec={this.state.timerSec} timer={this.state.timer}\r\n        cutoff={0}/>);\r\n     }\r\n      return( \r\n          <div>\r\n          <Nav />\r\n          <Container>\r\n          <div align = \"center\" style={{marginTop:\"10px\"}}>\r\n        <Card style={{ width: '25rem' }} >\r\n  <Card.Body>\r\n    <h2>CREATE A TIMER QUIZ</h2>\r\n            <div  className = \"space\"> \r\n            <input type=\"text\" name=\"Quizname\" placeholder=\"Give your quiz a name\" onChange={this.handleChange} value={this.state.Quizname}/>\r\n    <input type=\"number\" min =\"1\"  name=\"numberQuestion\" placeholder=\"No. of Questions\" onChange={this.handleChange} value={this.state.numberQuestion}/>\r\n    </div>\r\n    <div className = \"space\">\r\n        <p style={{fontSize:\"20px\"}}>Enter the seconds for each question</p>\r\n    <select name=\"timerSec\" onChange={this.handleChange} value={this.state.timerSec} className=\"custom-select\" style={{height:\"40px\",fontSize:\"18px\"}}>\r\n                      <option value=\"30\">30</option>\r\n                      <option value=\"60\">60</option>\r\n                      <option value=\"90\">90</option>\r\n                      <option value=\"120\">120</option>\r\n                    </select>\r\n    </div>\r\n    <button style={{width:\"fit-content\"}} variant=\"primary\" onClick={this.CreateQues}>NEXT STEP</button>\r\n    </Card.Body>\r\n    </Card></div>\r\n</Container>  \r\n</div>\r\n)\r\n    }\r\n}\r\n\r\nexport default TimerQuiz;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PopUp from './PopUp';\nimport PredefQues from \"./PredefQues\"\nimport Home from './Home';\nimport CreateCustom from \"./CreateCustom\"\nimport Room from './RoomHome';\nimport Main from '.././components/core/Main.jsx';\nimport RecoverButton from './RecoverButton';\nimport Login from './Login/Login.js';\nimport Signup from './Signup/Signup.js';\nimport Nav from './nav';\nimport QuesInput from './QuesInput'\nimport LevelHome from './LevelHome'\nimport TimerQuiz from './TimerQuiz'\nconst AppRoute = () => {\n  const crashed = useSelector(state => state.websocket.crashed);\n  const popUpActive = useSelector(state => state.popUp.active);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Signup />\n        </Route>\n        <Route path=\"/question\">\n          <Main />\n        </Route>\n        <Route path=\"/createcustom\">\n          <CreateCustom />\n        </Route>\n        <Route path=\"/leveltype\">\n          <LevelHome />\n        </Route>\n        <Route path=\"/nav\">\n          <Nav />\n        </Route>\n        <Route path=\"/Createques\">\n          <QuesInput />\n        </Route>\n        <Route path=\"/predefinedques\">\n          <PredefQues />\n        </Route>\n        <Route path=\"/Room\">\n          <Room />\n        </Route>\n        <Route path=\"/TimerQuiz\">\n          <TimerQuiz />\n        </Route>\n    \n      </Switch>\n      {crashed && <RecoverButton />}\n      {popUpActive && <PopUp />}\n    </Router>\n  );\n};\n\nexport default AppRoute;\n","import React from 'react';\r\n\r\nimport './resources/styles.css';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport socketMiddleware from './middleware/socketMiddleware';\r\nimport rootReducer from './reducers';\r\nimport AppRoute from './component/AppRoute';\r\nimport './style/index.scss';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware, socketMiddleware))\r\n);\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <AppRoute />\r\n  </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}